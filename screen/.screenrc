# 2025-02-15 cperl: Regardless of the terminal emulator that screen is
# running inside, we don't want screen mucking around with window
# titles, so override termcap/terminfo to say that every terminal's
# "status line presence" flag is false.
termcapinfo * 'hs@'

# General settings
hardstatus off
hardstatus alwayslastline '%{2;0}[%{-} %H %{2;0}][%{-}%=%?%-Lw%?%n%{1;0}%f%{-} %t%?%+Lw%?%=%{2;0}][%{-} %{3;0}%Y-%m-%d %c%{-} %{2;0}]%{-}'
caption string "%{03} "
defscrollback 10000
altscreen on
vbell off
term screen-256color
startup_message off

# Bindings for dealing with multiple regions
bind j focus down
bind k focus up
bind h focus left
bind l focus right
bind t focus top
bind b focus bottom

# Bindings for resizing
bind + resize +1
bind - resize -1

# Timeout for escape sequences
maptimeout 5

# Taken from https://gist.github.com/joaopizani/2718397
bind r eval "command -c rsz"

# use hjkl keys to resize regions
bind -c rsz h eval "resize -h -5" "command -c rsz"
bind -c rsz j eval "resize -v -5" "command -c rsz"
bind -c rsz k eval "resize -v +5" "command -c rsz"
bind -c rsz l eval "resize -h +5" "command -c rsz"

# 2024-01-18 cperl: Unset COLORTERM until running a screen version
# that supports it. Some terminal emulators set this as a kludy way to
# let programs know they support true color. E.g. alacritty does this,
# but when you run screen, which doesn't yet support true color in
# it's released version, and then run emacs, emacs sees the variable
# and tries to output using truecolor, but then the colors are all
# messed up because screen doesn't get it.
unsetenv COLORTERM
