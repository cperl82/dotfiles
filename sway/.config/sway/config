set $mod Mod4
set $font terminus 14
font $font

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty -o font.size=14

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec wmenu-run -f 'terminus 14'

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# split in vertical orientation
bindsym $mod+v split toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+Shift+a focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# 2018-11-28 cperl: auto back and forth
workspace_auto_back_and_forth yes

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# 2016-12-11 cperl: Volume keys
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute        exec pactl set-sink-mute   @DEFAULT_SINK@ toggle

# reload / restart
bindsym $mod+Shift+c reload

# resize window (you can also use the mouse for that)
mode "resize" {
     # These bindings trigger as soon as you enter the resize mode
     bindsym h resize shrink width  3 px or 3 ppt
     bindsym l resize grow   width  3 px or 3 ppt
     bindsym j resize shrink height 3 px or 3 ppt
     bindsym k resize grow   height 3 px or 3 ppt

     # back to normal: Enter or Escape
     bindsym Return mode "default"
     bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# 2020-11-19 cperl: taken from https://gist.github.com/pantuts/13623a7ba5e7e1c4ce44
# Create Log out, Reboot, Poweroff bindings
mode "(B)lank, (L)ogout, (S)uspend, (R)eboot, (P)oweroff" {
     bindsym B output * dpms force off; mode "default"
     bindsym L exit
     bindsym S exec systemctl suspend; mode "default"
     bindsym R exec systemctl reboot
     bindsym P exec systemctl poweroff

     # back to normal: Enter or Escape
     bindsym Return mode "default"
     bindsym Escape mode "default"
}
bindsym $mod+Shift+e mode "(B)lank, (L)ogout, (S)uspend, (R)eboot, (P)oweroff"

# 2016-12-11 cperl: Invoke i3-input to read user input for a window title, then use the
# response from that to construct an i3 command for running xdotool to actually set the
# window title
bindsym $mod+i exec --no-startup-id                                                     \
        i3-input                                                                        \
        -F "exec --no-startup-id xdotool getactivewindow -- set_window --name '%s'"     \
        -P "New window name: "                                                          \
        -f $font_core

bindsym $mod+o exec --no-startup-id                             \
        i3-input                                                \
        -F "rename workspace to %s"                             \
        -P "New workspace name: "                               \
        -f $font_core

# 2020-11-15 cperl: Various pop-ups
for_window [window_role="pop-up"] floating enable

set $quickswitch   ${HOME}/.config/i3/bin/quickswitch.sh
set $status        ${HOME}/.config/i3status/bin/status.sh

# 2016-12-11 cperl: Quickly throw windows I don't want to think about onto the scratchpad
bindsym $mod+period move scratchpad

# 2025-02-13 cperl: Quick switching of windows
bindsym $mod+comma \
        exec \
        'wlrctl toplevel focus title:popup-terminal-qsw ||		\
           alacritty							\
             --option "font.size=14"					\
             --option "window.dimensions={columns=130, lines=50}"	\
             --title  "popup-terminal-qsw"				\
             --command $quickswitch find-window'

# 2018-03-26 cperl: Make sure anything with the name "popup-terminal"
# floats and has no border
for_window [title="^popup-terminal(-.*)?$"] {
           floating enable
           border none
}

# 2016-11-14 cperl: No borders for chrome
for_window [app_id="google-chrome"] border none

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command $status
}

# Idle configuration
exec swayidle -w \
       timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"'

# local overrides
include config.local
